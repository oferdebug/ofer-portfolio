// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql" // or "mysql" according to your choice
  url      = env("DATABASE_URL")
}

// Users
model User {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  name           String?
  hashedPassword String?
  role           Role         @default(USER)
  constraints    Constraint[]
  assignments    Assignment[]
  createdAt      DateTime     @default(now())
}

// Shifts
model Shift {
  id          Int          @id @default(autoincrement())
  date        DateTime
  startTime   String // e.g., "06:30"
  endTime     String?
  assignments Assignment[]
}

// Employee Constraints (unavailability or preference)
model Constraint {
  id        Int            @id @default(autoincrement())
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
  date      DateTime
  type      ConstraintType // UNAVAILABLE | PREFERRED
  createdAt DateTime       @default(now())
}

// Shift Assignments
model Assignment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  shift     Shift    @relation(fields: [shiftId], references: [id])
  shiftId   Int
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum ConstraintType {
  UNAVAILABLE
  PREFERRED
}
